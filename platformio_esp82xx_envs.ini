;;; Custom builds *****************************************************
; Use either the plugins defined in                                   ;
; pre_custom_esp82xx.py or Custom.h                                   ;
; *********************************************************************
[limited_build_size]
build_flags               = -DNO_GLOBAL_MDNS



[hard_esp82xx]
lib_ignore                = ${core_stage.lib_ignore}
platform                  = ${core_stage.platform}
platform_packages         = ${core_stage.platform_packages}
build_flags               = ${core_stage.build_flags}
                            -DBUILD_NO_DEBUG
                            -DPLUGIN_BUILD_CUSTOM
                            -DFEATURE_DEFINE_SERIAL_CONSOLE_PORT=0
extra_scripts             = ${extra_scripts_esp8266.extra_scripts}



[esp8266_custom_common_274]
build_flags               = ${core_2_7_4.build_flags}
platform                  = ${core_2_7_4.platform}
platform_packages         = ${core_2_7_4.platform_packages}
lib_ignore                = ESP32_ping
                            ESP32WebServer
                            ESP32HTTPUpdateServer
                            ServoESP32
                            ${no_ir.lib_ignore}
                            TinyWireM
                            I2C AXP192 Power management
                            EspSoftwareSerial
                            LittleFS
                            LittleFS(esp8266)
extra_scripts             = pre:tools/pio/pre_custom_esp82xx.py
                            ${extra_scripts_esp8266.extra_scripts}

[esp8266_custom_common_312]
build_flags               = ${core_stage.build_flags}
platform                  = ${core_stage.platform}
platform_packages         = ${core_stage.platform_packages}
lib_ignore                = ESP32_ping
                            ESP32WebServer
                            ESP32HTTPUpdateServer
                            ServoESP32
                            ${no_ir.lib_ignore}
                            TinyWireM
                            I2C AXP192 Power management
                            LittleFS
                            LittleFS(esp8266)
extra_scripts             = pre:tools/pio/pre_custom_esp82xx.py
                            ${extra_scripts_esp8266.extra_scripts}



; Custom: 4M1M version --------------------------
[env:custom_274_ESP8266_4M1M]
extends                   = esp8266_4M1M
platform                  = ${esp8266_custom_common_274.platform}
platform_packages         = ${esp8266_custom_common_274.platform_packages}
build_flags               = ${esp8266_custom_common_274.build_flags} 
                            ${esp8266_4M1M.build_flags} 
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${esp8266_custom_common_274.lib_ignore}
extra_scripts             = ${esp8266_custom_common_274.extra_scripts}




[env:custom_312_ESP8266_4M1M]
extends                   = esp8266_4M1M
platform                  = ${esp8266_custom_common_312.platform}
platform_packages         = ${esp8266_custom_common_312.platform_packages}
build_flags               = ${esp8266_custom_common_312.build_flags}
                            ${esp8266_4M1M.build_flags} 
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${esp8266_custom_common_312.lib_ignore}
extra_scripts             = ${esp8266_custom_common_312.extra_scripts}


[env:custom_beta_2ndheap_ESP8266_4M1M]
extends                   = esp8266_4M1M
platform                  = ${beta_platform_2ndheap.platform}
platform_packages         = ${beta_platform_2ndheap.platform_packages}
build_flags               = ${beta_platform_2ndheap.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${esp8266_custom_common_312.lib_ignore}
extra_scripts             = ${esp8266_custom_common_312.extra_scripts}


; Custom: 4M2M version -- SPIFFS --------------
[env:custom_312_ESP8266_4M2M]
extends                   = esp8266_4M2M
platform                  = ${esp8266_custom_common_312.platform}
platform_packages         = ${esp8266_custom_common_312.platform_packages}
build_flags               = ${esp8266_custom_common_312.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ${esp8266_custom_common_312.lib_ignore}
extra_scripts             = ${esp8266_custom_common_312.extra_scripts}

; Custom: 4M2M version -- LittleFS --------------
; LittleFS is determined by using "LittleFS" in the pio env name
[env:custom_312_ESP8266_4M2M_LittleFS]
extends                   = esp8266_4M2M
platform                  = ${esp8266_custom_common_312.platform}
platform_packages         = ${esp8266_custom_common_312.platform_packages}
build_flags               = ${esp8266_custom_common_312.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_CUSTOM
lib_ignore                = ESP32_ping
                            ESP32WebServer
                            ESP32HTTPUpdateServer
                            ServoESP32
                            ${no_ir.lib_ignore}
                            TinyWireM
                            I2C AXP192 Power management
extra_scripts             = ${esp8266_custom_common_312.extra_scripts}




;;; NORMAL (STABLE) ***************************************************
; normal version with stable plugins                                  ;
; *********************************************************************



; NORMAL: 4096k version --------------------------
[env:normal_ESP8266_4M1M]
extends                   = esp8266_4M1M
platform                  = ${normal.platform}
platform_packages         = ${normal.platform_packages}
build_flags               = ${normal.build_flags}
                            ${esp8266_4M1M.build_flags}
lib_ignore                = ${normal.lib_ignore}

[env:normal_ESP8266_4M1M_VCC]
extends                   = esp8266_4M1M
platform                  = ${normal.platform}
platform_packages         = ${normal.platform_packages}
build_flags               = ${normal.build_flags}
                            ${esp8266_4M1M.build_flags}
                            -D FEATURE_ADC_VCC=1
                            -D NO_LIMIT_BUILD_SIZE
lib_ignore                = ${normal.lib_ignore}




;;; Minimal ***********************************************************
; Minimal build size for OTA                                          ;
; *********************************************************************



;;; COLLECTION  *********************************************************
; additional plugins (and dependend code) that is grouped as COLLECTION ;
; Includes "normal" + "collection" plugins                              ;
; ***********************************************************************

[collection_ESP8266_4M1M]
extends                   = esp8266_4M1M, collection
build_flags               = ${collection.build_flags}
                            ${esp8266_4M1M.build_flags}
                            ${limited_build_size.build_flags}


[env:collection_C_ESP8266_4M1M]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DPLUGIN_BUILD_COLLECTION_C
                            -DCOLLECTION_USE_RTTTL


; COLL: 4096k version + FEATURE_ADC_VCC ----------

[env:collection_C_ESP8266_4M1M_VCC]
extends                   = collection_ESP8266_4M1M
build_flags               = ${collection_ESP8266_4M1M.build_flags}
                            -DFEATURE_ADC_VCC=1
                            -DPLUGIN_BUILD_COLLECTION_C
                            -DCOLLECTION_USE_RTTTL

